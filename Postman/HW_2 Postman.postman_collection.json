{
	"info": {
		"_postman_id": "594daa34-70bd-4790-af94-4d1f65203516",
		"name": "HW_2 Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22393417"
	},
	"item": [
		{
			"name": "/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var jsonData = pm.response.json();\r",
							"\r",
							" var resp_token = jsonData.token\r",
							"\r",
							" console.log(resp_token)\r",
							"\r",
							"\r",
							"pm.environment.set(\"token\", resp_token);\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Andrew",
							"type": "text"
						},
						{
							"key": "password",
							"value": "12345678",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/login",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Отправить запрос.\r",
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Проверить, что в body приходит правильный string.    \r",
							"    pm.test(\"Проверить, что в body приходит правильный string\", function () {\r",
							"        pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"    });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" // 1.Отправить запрос.\r",
							"// 2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json\r",
							"    var jsonData = pm.response.json();\r",
							"// 4.Проверить, что name в ответе равно name s request\r",
							"pm.test(\"Req_Resp_name_check\", function () {\r",
							"pm.expect(jsonData.name).to.eql(\"Andrew\");\r",
							"});\r",
							"// 5. Проверить, что age в ответе равно age s request \r",
							"pm.test(\"Req_Resp_age_check\", function () {\r",
							"pm.expect(jsonData.age).to.eql('35');\r",
							"});\r",
							"// 6. Проверить, что salary в ответе равно salary s request \r",
							"pm.test(\"Req_Resp_salary_check\", function () {\r",
							"pm.expect(jsonData.salary).to.eql(500);\r",
							"});\r",
							"// 7. Спарсить request\r",
							"var req = request.data;\r",
							"// 8. Проверить, что name в ответе равно name s request \r",
							"pm.test(\"Req_Resp_name_check\", function () {\r",
							"pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"// 9. Проверить, что age в ответе равно age s request\r",
							"pm.test(\"Req_Resp_age_check\", function () {\r",
							"pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"// 10. Проверить, что salary в ответе равно salary s request\r",
							"pm.test(\"Req_Resp_salary_check\", function () {\r",
							"pm.expect(jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"// 11. Вывести в консоль параметр family из response\r",
							"console.log(jsonData.family);\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 \r",
							"pm.test(\"Salary 1_5 check from request\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(jsonData.salary*4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Andrew",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/user_info_3",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" // 1.Отправить запрос.\r",
							"// 2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json\r",
							" var jsonData = pm.response.json();\r",
							"//  4. Спарсить request\r",
							"var req = request.data;\r",
							"// 5. Проверить, что name в ответе равно name s request\r",
							"pm.test(\"Req_Resp_name_check\", function () {\r",
							"pm.expect(jsonData.name).to.eql(\"Andrew\");\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age из request \r",
							"pm.test(\"Req_Resp_age_check\", function () {\r",
							"pm.expect(jsonData.age).to.eql('35');\r",
							"});\r",
							"// 7. Проверить, что salary в ответе равно salary s request (\r",
							"    pm.test(\"Req_Resp_salary_check\", function () {\r",
							"pm.expect(jsonData.salary).to.eql(500);\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response\r",
							"console.log(jsonData.family);\r",
							"// 9. Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"Проверить, что у параметра dog есть параметры name\",function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"// 10. Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"Проверить, что у параметра dog есть параметры age.\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"// 11. Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"Проверить, что параметр name имеет значение Luky\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"// 12. Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"Проверить, что параметр age имеет значение 4\", function(){\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "162.55.220.72:5005/object_info_3?name=Andrew&age=35&salary=500",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrew"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" // 1.Отправить запрос.\r",
							"// 2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json\r",
							"    var jsonData = pm.response.json();\r",
							"    // 4. Спарсить request\r",
							"    pm.request.url.query.toObject();\r",
							"// 5.Проверить, что name в ответе равно name s request\r",
							"pm.test(\"Req_Resp_name_check\", function () {\r",
							"pm.expect(jsonData.name).to.eql('Andrew');\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age из request \r",
							"pm.test(\"Req_Resp_age_check\", function () {\r",
							"pm.expect(jsonData.age).to.eql(35);\r",
							"});\r",
							"// 7. Вывести в консоль параметр salary из request\r",
							"var jsonData_url = pm.request.url.query.toObject();\r",
							"console.log(\"salary = \", jsonData_url.salary);\r",
							"// 8. Вывести в консоль параметр salary из response\r",
							"console.log(jsonData.salary);\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response\r",
							"console.log(jsonData.salary[0]);\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
							"console.log(jsonData.salary[1]);\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"console.log(jsonData.salary[2]);\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request\r",
							"var req_salary = pm.request.url.query.get(\"salary\");\r",
							"console.log(req_salary);\r",
							"pm.test(\"Проверить, что 0-й элемент параметра salary равен salary из request\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(+req_salary);\r",
							"});\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request \r",
							"pm.test(\"Проверить, что 1-й элемент параметра salary равен salary*2 из request \", function () {\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(+req_salary*2);\r",
							"});\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request \r",
							"pm.test(\"Проверить, что 2-й элемент параметра salary равен salary*3 из request \", function () {\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(+req_salary*3);\r",
							"});\r",
							"// 15. Создать и передать в окружение переменную name\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"// 16. Создать и передать в окружение переменную age\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"// 17. Создать и передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", jsonData_url.salary);\r",
							"// 18. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var salary_list = jsonData.salary;\r",
							"console.log(salary_list.length)\r",
							"for (var i = 0; i < salary_list.length; i++){\r",
							"    console.log('arr_item = ', salary_list[i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "162.55.220.72:5005/object_info_4?name=Andrew&age=35&salary=500",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrew"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://http://162.55.220.72:5005/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"// 7. Спарсить request.\r",
							"var req = request.data;\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Проверить, что json response имеет параметр start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Проверить, что json response имеет параметр person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
							"});\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
							"});\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(+req.salary*3.3);\r",
							"});\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(+req.salary*3.8);\r",
							"});\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"Проверить, что что параметр u_age равен age из request (age забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+req.salary*4.2);\r",
							"});\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"var jsonData = pm.response.json();\r",
							"var resp_person = Object.keys(jsonData.person);\r",
							"console.log(\"123-\",resp_person);\r",
							"for (var i of resp_person){\r",
							"    console.log(typeof i)\r",
							"    var resp_person = jsonData.person[i];\r",
							"    console.log (\"123=\",typeof resp_person)\r",
							"    if (typeof resp_person ==\"object\"){\r",
							"        for (var ii of resp_person){\r",
							"            console.log (\"response username ==\", ii);\r",
							"            console.log (\"object ===\")\r",
							"        }\r",
							"        console.log (\"response_person -\", resp_person);\r",
							"    }\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "162.55.220.72:5005/user_info_2",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}